<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Antbuildfile fuer alle DB Jobs.                                         -->
<!--                                                                         -->
<!-- $Id: build-dbtools.xml,v 1.3 2009/06/25 13:20:49 heidi Exp $ -->
<!--                                                                         -->
<!-- Wer | Wann     | Was                                                    -->
<!-- SS    11.04.07   POSTGRESQL Backup erweitert                            -->
<!-- JO    18.08.06   Update47                                               -->
<!-- JO    dd.07.06   neue struktur.                                         -->
<!-- SS/KF 25.09.07  Nicht benoetigte targets entfernt                       -->
<!-- KF     31.10.07   cleanup, kommentare                                                 -->
<!--                                                                         -->
<!-- ======================================================================= -->


<project name="build-dbtools" basedir="." default="readme">
	<property environment="env" />
	<property file="build-dbtools.properties.local"/>
	<property file="build-dbtools.properties"/>
	
	<import file="build-commons.xml"/>

<target  name="readme" description="read me - how 2 use">
  <echo>
    <![CDATA[
     
    ]]>
  </echo>
</target>

<!-- ***************************************************-->
<!-- target used by old qftest-suite to backup the database  -->
<!-- between the tests.-->
<!-- uses property "name.qftest.dbbackup" as parameter -->
<!-- to compose the name for the backup-file -->
<!-- ***************************************************-->
<target name="backup.db.qftest" depends="check.db, check.db.up"
 description="Sichert die Datenbank zwischen den QF-Tests.">

 <condition property="name.db.backup" value="${name.prefix.mssql}_${db.database.name}_${name.qftest.dbbackup}"
      else="${name.prefix.postgresql}_${db.database.name}_${name.qftest.dbbackup}" >
	<isset property="db.which.MSSQL"/>
 </condition>
 
 <antcall target="backup.db" inheritall="false">
	<param name="name.db.backup" value="${name.db.backup}"/>
 </antcall>
 <echo>Db-backup to file ${name.db.backup} finished.</echo>
</target>



<!-- ***************************************************-->
<!-- backup a database to a file -->
<!-- ***************************************************-->
<target name="backup.db" depends="check.db, check.db.up"
	description="Sichert die Datenbank unter dem Namen ${name.db.backup}" >
	
	<mkdir dir="${dir.ccwork.db}"/>
 
	<condition property="prefix" value="${name.prefix.mssql}" else="${name.prefix.postgresql}">
		<isset property="db.which.MSSQL"/>
	</condition>
 
	<condition property="file.db.backup" value="${dir.ccwork.db}/${name.db.backup}"
	      else="${dir.ccwork.db}/${prefix}_${db.database.name}" >
	  <isset property="name.db.backup"/>
	</condition>

  <ant antfile="${file.build.db}" target="backup.db" inheritall="false">
		<propertyset refid="id.db.properties"/>
		<property name="backupfile" value="${file.db.backup}"/>
	</ant>
</target>


<!-- ***************************************************-->
<!-- opens a Dialog to choose a db-backup file to restore-->
<!-- ***************************************************-->
<target name="input.db.restore" depends="check.db, declare.anttools"
    unless="file.db.restore" >

 <condition property="name.prefix.default" value="${name.prefix.mssql}"
   else="${name.prefix.postgresql}">
  <isset property="db.which.MSSQL"/>
 </condition>

 <filechooser title="Select backup file to restore at ${db},${db.server.name}/${db.database.name}"
  property="file.db.restore" dir="${dir.db.restore.default}" defprefix="${name.prefix.default}">
  <prefixfilter prefix="${name.prefix.mssql}" description="MS SQL-Server Db - Backup Files"/>
  <prefixfilter prefix="${name.prefix.postgresql}" description="Postgres Db - Backup files"/>
 </filechooser>

 <if>
  <isset property="file.db.restore"/>
  <then>
   <echo>file ${file.db.restore} selected for restore.</echo>
  </then>
  <else>
   <echo>no file selected. -> aborting restore.</echo>
  </else>
 </if>
</target>


<!-- ***************************************************-->
<!-- restore a database from the give file
 ${file.db.restore} -->
<!-- ***************************************************-->
<target name="restore.db" depends="input.db.restore, check.db.up"
 if="file.db.restore"  description="restores a backuped database">

 <echo>restoring database file ${file.db.restore}</echo>

	<!-- auf lokales Verzeichnis kopieren -->
	<basename file="${file.db.restore}" property="name.db.restore.temp"/>
	<property name="file.db.restore.temp" value="${dir.temp}/${name.db.restore.temp}"/>
	<copy file="${file.db.restore}" tofile="${file.db.restore.temp}"
    verbose="true" overwrite="true"/>
	
	<fullospath property="restorefile" path="${file.db.restore.temp}"/>
	  
  <ant antfile="${file.build.db}" target="restore.db" inheritall="false">
		<propertyset refid="id.db.properties"/>
		<property name="restorefile" value="${restorefile}"/>
	</ant>
 
 <!-- temp-file wieder loeschen -->
 <delete file="${file.db.restore.temp}"/>
</target>

<target name="start.db.postgresql">
  <tstamp>
    <format property="time" pattern="dd.MM.yyyy hh:mm:ss" locale="de,AT"/>
  </tstamp>
  <echo>Start PostgreSQL: ${time}</echo><echo/> 
	<exec dir="." executable="cmd.exe" spawn="false">
		<arg line="/c net start pgsql-8.1"/>
	</exec>
	<echo>...done</echo>
</target>

<target name="stop.db.postgresql">
  <tstamp>
    <format property="time" pattern="dd.MM.yyyy hh:mm:ss" locale="de,AT"/>
  </tstamp>
  <echo>Stop PostgreSQL: ${time}</echo><echo/>
			<exec dir="." executable="cmd.exe" spawn="false">
				<arg line="/c net stop pgsql-8.1"/>
			</exec>
		<echo>...done</echo>
</target>

<target name="restart.db.postgresql">
  <echo>Stop PostgreSQL: ${postgres.stop}</echo>
	<antcall target="stop.db.postgresql"/>
  <echo>Sleep 1 minutes</echo>
	<sleep minutes="1"/>
	<antcall target="start.db.postgresql"/>
  <echo>PostgreSQL restarted</echo>
  <echo>Sleep 1 minutes</echo>
	<sleep minutes="1"/>
</target>

</project>
